// Autogenerated from Pigeon (v1.0.17), do not edit directly.
// See also: https://pub.dev/packages/pigeon
#import <Foundation/Foundation.h>
@protocol FlutterBinaryMessenger;
@protocol FlutterMessageCodec;
@class FlutterError;
@class FlutterStandardTypedData;

NS_ASSUME_NONNULL_BEGIN

typedef NS_ENUM(NSUInteger, MessageType) {
  MessageTypeBasicId = 0,
  MessageTypeLocation = 1,
  MessageTypeAuth = 2,
  MessageTypeSelfId = 3,
  MessageTypeSystem = 4,
  MessageTypeOperatorId = 5,
};

typedef NS_ENUM(NSUInteger, MessageSource) {
  MessageSourceBluetoothLegacy = 0,
  MessageSourceBluetoothLongRange = 1,
  MessageSourceWifiNaN = 2,
  MessageSourceWifiBeacon = 3,
};

typedef NS_ENUM(NSUInteger, IdType) {
  IdTypeNone = 0,
  IdTypeSerial_Number = 1,
  IdTypeCAA_Registration_ID = 2,
  IdTypeUTM_Assigned_ID = 3,
  IdTypeSpecific_Session_ID = 4,
};

typedef NS_ENUM(NSUInteger, UaType) {
  UaTypeNone = 0,
  UaTypeAeroplane = 1,
  UaTypeHelicopter_or_Multirotor = 2,
  UaTypeGyroplane = 3,
  UaTypeHybrid_Lift = 4,
  UaTypeOrnithopter = 5,
  UaTypeGlider = 6,
  UaTypeKite = 7,
  UaTypeFree_balloon = 8,
  UaTypeCaptive_balloon = 9,
  UaTypeAirship = 10,
  UaTypeFree_fall_parachute = 11,
  UaTypeRocket = 12,
  UaTypeTethered_powered_aircraft = 13,
  UaTypeGround_obstacle = 14,
  UaTypeOther = 15,
};

typedef NS_ENUM(NSUInteger, AircraftStatus) {
  AircraftStatusUndeclared = 0,
  AircraftStatusGround = 1,
  AircraftStatusAirborne = 2,
  AircraftStatusEmergency = 3,
};

typedef NS_ENUM(NSUInteger, HeightType) {
  HeightTypeTakeoff = 0,
  HeightTypeGround = 1,
};

typedef NS_ENUM(NSUInteger, HorizontalAccuracy) {
  HorizontalAccuracyUnknown = 0,
  HorizontalAccuracyKilometers_18_52 = 1,
  HorizontalAccuracyKilometers_7_408 = 2,
  HorizontalAccuracyKilometers_3_704 = 3,
  HorizontalAccuracyKilometers_1_852 = 4,
  HorizontalAccuracyMeters_926 = 5,
  HorizontalAccuracyMeters_555_6 = 6,
  HorizontalAccuracyMeters_185_2 = 7,
  HorizontalAccuracyMeters_92_6 = 8,
  HorizontalAccuracyMeters_30 = 9,
  HorizontalAccuracyMeters_10 = 10,
  HorizontalAccuracyMeters_3 = 11,
  HorizontalAccuracyMeters_1 = 12,
};

typedef NS_ENUM(NSUInteger, VerticalAccuracy) {
  VerticalAccuracyUnknown = 0,
  VerticalAccuracyMeters_150 = 1,
  VerticalAccuracyMeters_45 = 2,
  VerticalAccuracyMeters_25 = 3,
  VerticalAccuracyMeters_10 = 4,
  VerticalAccuracyMeters_3 = 5,
  VerticalAccuracyMeters_1 = 6,
};

typedef NS_ENUM(NSUInteger, SpeedAccuracy) {
  SpeedAccuracyUnknown = 0,
  SpeedAccuracyMeter_per_second_10 = 1,
  SpeedAccuracyMeter_per_second_3 = 2,
  SpeedAccuracyMeter_per_second_1 = 3,
  SpeedAccuracyMeter_per_second_0_3 = 4,
};

typedef NS_ENUM(NSUInteger, BluetoothState) {
  BluetoothStateUnknown = 0,
  BluetoothStateResetting = 1,
  BluetoothStateUnsupported = 2,
  BluetoothStateUnauthorized = 3,
  BluetoothStatePoweredOff = 4,
  BluetoothStatePoweredOn = 5,
};

@class BasicIdMessage;
@class LocationMessage;
@class OperatorIdMessage;

@interface BasicIdMessage : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithReceivedTimestamp:(NSNumber *)receivedTimestamp
    macAddress:(NSString *)macAddress
    source:(MessageSource)source
    rssi:(nullable NSNumber *)rssi
    uasId:(NSString *)uasId
    idType:(IdType)idType
    uaType:(UaType)uaType;
@property(nonatomic, strong) NSNumber * receivedTimestamp;
@property(nonatomic, copy) NSString * macAddress;
@property(nonatomic, assign) MessageSource source;
@property(nonatomic, strong, nullable) NSNumber * rssi;
@property(nonatomic, copy) NSString * uasId;
@property(nonatomic, assign) IdType idType;
@property(nonatomic, assign) UaType uaType;
@end

@interface LocationMessage : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithReceivedTimestamp:(NSNumber *)receivedTimestamp
    macAddress:(NSString *)macAddress
    source:(MessageSource)source
    rssi:(nullable NSNumber *)rssi
    status:(AircraftStatus)status
    heightType:(HeightType)heightType
    direction:(nullable NSNumber *)direction
    speedHorizontal:(nullable NSNumber *)speedHorizontal
    speedVertical:(nullable NSNumber *)speedVertical
    latitude:(nullable NSNumber *)latitude
    longitude:(nullable NSNumber *)longitude
    altitudePressure:(nullable NSNumber *)altitudePressure
    altitudeGeodetic:(nullable NSNumber *)altitudeGeodetic
    height:(nullable NSNumber *)height
    horizontalAccuracy:(HorizontalAccuracy)horizontalAccuracy
    verticalAccuracy:(VerticalAccuracy)verticalAccuracy
    baroAccuracy:(VerticalAccuracy)baroAccuracy
    speedAccuracy:(SpeedAccuracy)speedAccuracy
    time:(nullable NSNumber *)time
    timeAccuracy:(nullable NSNumber *)timeAccuracy;
@property(nonatomic, strong) NSNumber * receivedTimestamp;
@property(nonatomic, copy) NSString * macAddress;
@property(nonatomic, assign) MessageSource source;
@property(nonatomic, strong, nullable) NSNumber * rssi;
@property(nonatomic, assign) AircraftStatus status;
@property(nonatomic, assign) HeightType heightType;
@property(nonatomic, strong, nullable) NSNumber * direction;
@property(nonatomic, strong, nullable) NSNumber * speedHorizontal;
@property(nonatomic, strong, nullable) NSNumber * speedVertical;
@property(nonatomic, strong, nullable) NSNumber * latitude;
@property(nonatomic, strong, nullable) NSNumber * longitude;
@property(nonatomic, strong, nullable) NSNumber * altitudePressure;
@property(nonatomic, strong, nullable) NSNumber * altitudeGeodetic;
@property(nonatomic, strong, nullable) NSNumber * height;
@property(nonatomic, assign) HorizontalAccuracy horizontalAccuracy;
@property(nonatomic, assign) VerticalAccuracy verticalAccuracy;
@property(nonatomic, assign) VerticalAccuracy baroAccuracy;
@property(nonatomic, assign) SpeedAccuracy speedAccuracy;
@property(nonatomic, strong, nullable) NSNumber * time;
@property(nonatomic, strong, nullable) NSNumber * timeAccuracy;
@end

@interface OperatorIdMessage : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithMacAddress:(NSString *)macAddress
    source:(MessageSource)source
    rssi:(nullable NSNumber *)rssi
    operatorId:(NSString *)operatorId;
@property(nonatomic, copy) NSString * macAddress;
@property(nonatomic, assign) MessageSource source;
@property(nonatomic, strong, nullable) NSNumber * rssi;
@property(nonatomic, copy) NSString * operatorId;
@end

/// The codec used by Api.
NSObject<FlutterMessageCodec> *ApiGetCodec(void);

@protocol Api
- (void)startScanWithCompletion:(void(^)(FlutterError *_Nullable))completion;
- (void)stopScanWithCompletion:(void(^)(FlutterError *_Nullable))completion;
- (void)setAutorestartEnable:(nullable NSNumber *)enable completion:(void(^)(FlutterError *_Nullable))completion;
- (void)isScanningWithCompletion:(void(^)(NSNumber *_Nullable, FlutterError *_Nullable))completion;
- (void)bluetoothStateWithCompletion:(void(^)(NSNumber *_Nullable, FlutterError *_Nullable))completion;
@end

extern void ApiSetup(id<FlutterBinaryMessenger> binaryMessenger, NSObject<Api> *_Nullable api);

/// The codec used by MessageApi.
NSObject<FlutterMessageCodec> *MessageApiGetCodec(void);

@protocol MessageApi
- (nullable NSNumber *)determineMessageTypePayload:(FlutterStandardTypedData *)payload offset:(NSNumber *)offset error:(FlutterError *_Nullable *_Nonnull)error;
- (nullable BasicIdMessage *)fromBufferBasicPayload:(FlutterStandardTypedData *)payload offset:(NSNumber *)offset error:(FlutterError *_Nullable *_Nonnull)error;
- (nullable LocationMessage *)fromBufferLocationPayload:(FlutterStandardTypedData *)payload offset:(NSNumber *)offset error:(FlutterError *_Nullable *_Nonnull)error;
- (nullable OperatorIdMessage *)fromBufferOperatorIdPayload:(FlutterStandardTypedData *)payload offset:(NSNumber *)offset error:(FlutterError *_Nullable *_Nonnull)error;
@end

extern void MessageApiSetup(id<FlutterBinaryMessenger> binaryMessenger, NSObject<MessageApi> *_Nullable api);

NS_ASSUME_NONNULL_END
